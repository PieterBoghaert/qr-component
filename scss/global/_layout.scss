@use "../util/" as u;

@layer layout {
  :root {
    --spacing-0: 0;
    --spacing-200: 1rem;
    --spacing-300: calc(24 / 16 * 1rem);
    --spacing-500: calc(40 / 16 * 1rem);

    --br-10: calc(10 / 16 * 1rem);
    --br-20: calc(20 / 16 * 1rem);
    --br-full: 50%;
    --wrapper-size: calc(320 / 16 * 1rem);
  }

  html {
    color-scheme: light;
  }

  body {
    color: var(--color-text);
    background-color: var(--color-bg);
    margin: 0;
  }

  .wrapper {
    inline-size: min(100% - var(--spacing-500), var(--wrapper-size));
    margin-inline: auto;
  }

  .site-content {
    display: grid;
    place-content: center;
    min-block-size: 100dvh;
  }

  .qr-component {
    background-color: var(--c-white);
    border-radius: var(--br-20);
    padding: var(--spacing-200) var(--spacing-200) var(--spacing-500);
    text-align: center;

    img {
      border-radius: var(--br-10);
      margin-block-end: var(--spacing-300);
    }

    h1 {
      margin-block-end: var(--spacing-200);
    }
  }

  .attribution {
    display: block;
    text-align: center;
    padding-block: var(--spacing-300);
  }

  @include u.breakpoint("medium") {
  }

  @media (prefers-reduced-motion: no-preference) and (hover: hover) {
    .qr-component {
      transition: transform 0.3s ease-in, box-shadow 0.3s ease-in;

      img {
        transition: filter 0.3s ease-in;
      }

      &:hover {
        transform: translateY(calc(var(--spacing-200) / 2));
        box-shadow: 0 3px 6px hsla(from (var(--c-slate-900) h s l / 0.16)),
          0 3px 6px hsla(from (var(--c-slate-900) h s l / 0.23));

        img {
          filter: grayscale(0.8);
        }
      }
    }
  }
}
